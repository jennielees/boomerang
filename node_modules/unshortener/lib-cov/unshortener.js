/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['unshortener.js']) {
  _$jscoverage['unshortener.js'] = [];
  _$jscoverage['unshortener.js'][2] = 0;
  _$jscoverage['unshortener.js'][3] = 0;
  _$jscoverage['unshortener.js'][4] = 0;
  _$jscoverage['unshortener.js'][5] = 0;
  _$jscoverage['unshortener.js'][7] = 0;
  _$jscoverage['unshortener.js'][8] = 0;
  _$jscoverage['unshortener.js'][9] = 0;
  _$jscoverage['unshortener.js'][10] = 0;
  _$jscoverage['unshortener.js'][12] = 0;
  _$jscoverage['unshortener.js'][14] = 0;
  _$jscoverage['unshortener.js'][16] = 0;
  _$jscoverage['unshortener.js'][19] = 0;
  _$jscoverage['unshortener.js'][20] = 0;
  _$jscoverage['unshortener.js'][22] = 0;
  _$jscoverage['unshortener.js'][24] = 0;
  _$jscoverage['unshortener.js'][26] = 0;
  _$jscoverage['unshortener.js'][27] = 0;
  _$jscoverage['unshortener.js'][29] = 0;
  _$jscoverage['unshortener.js'][30] = 0;
  _$jscoverage['unshortener.js'][32] = 0;
  _$jscoverage['unshortener.js'][36] = 0;
  _$jscoverage['unshortener.js'][39] = 0;
  _$jscoverage['unshortener.js'][41] = 0;
  _$jscoverage['unshortener.js'][42] = 0;
  _$jscoverage['unshortener.js'][47] = 0;
  _$jscoverage['unshortener.js'][51] = 0;
  _$jscoverage['unshortener.js'][53] = 0;
  _$jscoverage['unshortener.js'][54] = 0;
  _$jscoverage['unshortener.js'][56] = 0;
  _$jscoverage['unshortener.js'][62] = 0;
  _$jscoverage['unshortener.js'][64] = 0;
  _$jscoverage['unshortener.js'][66] = 0;
  _$jscoverage['unshortener.js'][72] = 0;
  _$jscoverage['unshortener.js'][75] = 0;
  _$jscoverage['unshortener.js'][76] = 0;
  _$jscoverage['unshortener.js'][77] = 0;
  _$jscoverage['unshortener.js'][79] = 0;
  _$jscoverage['unshortener.js'][80] = 0;
  _$jscoverage['unshortener.js'][82] = 0;
  _$jscoverage['unshortener.js'][89] = 0;
  _$jscoverage['unshortener.js'][90] = 0;
  _$jscoverage['unshortener.js'][96] = 0;
  _$jscoverage['unshortener.js'][97] = 0;
  _$jscoverage['unshortener.js'][98] = 0;
  _$jscoverage['unshortener.js'][100] = 0;
  _$jscoverage['unshortener.js'][104] = 0;
  _$jscoverage['unshortener.js'][106] = 0;
  _$jscoverage['unshortener.js'][112] = 0;
}
_$jscoverage['unshortener.js'][2]++;
var urllib = require("url");
_$jscoverage['unshortener.js'][3]++;
var http = require("http"), https = require("https");
_$jscoverage['unshortener.js'][4]++;
var Bitly = require("bitly").Bitly;
_$jscoverage['unshortener.js'][5]++;
var querystring = require("querystring");
_$jscoverage['unshortener.js'][7]++;
exports.expand = (function (url, options, callback) {
  _$jscoverage['unshortener.js'][8]++;
  callback = arguments[arguments.length - 1];
  _$jscoverage['unshortener.js'][9]++;
  if (typeof callback != "function") {
    _$jscoverage['unshortener.js'][10]++;
    callback = (function () {
});
  }
  _$jscoverage['unshortener.js'][12]++;
  options = (typeof arguments[1] !== "function")? arguments[1]: {};
  _$jscoverage['unshortener.js'][14]++;
  url = (typeof url === "object")? url: urllib.parse(url);
  _$jscoverage['unshortener.js'][16]++;
  switch (url.host) {
  case "bit.ly":
  case "j.mp":
    _$jscoverage['unshortener.js'][19]++;
    if (options.bitly) {
      _$jscoverage['unshortener.js'][20]++;
      Unshorteners.bitly(url, options.bitly, callback);
    }
    else {
      _$jscoverage['unshortener.js'][22]++;
      Unshorteners.generic(url, callback);
    }
    _$jscoverage['unshortener.js'][24]++;
    break;
  case "is.gd":
    _$jscoverage['unshortener.js'][26]++;
    Unshorteners.isgd(url, callback);
    _$jscoverage['unshortener.js'][27]++;
    break;
  case "goo.gl":
    _$jscoverage['unshortener.js'][29]++;
    Unshorteners.googl(url, callback);
    _$jscoverage['unshortener.js'][30]++;
    break;
  default:
    _$jscoverage['unshortener.js'][32]++;
    Unshorteners.generic(url, callback);
  }
});
_$jscoverage['unshortener.js'][36]++;
var Unshorteners = {bitly: (function (url, account, callback) {
  _$jscoverage['unshortener.js'][39]++;
  var bitly = new Bitly(account.username, account.apikey);
  _$jscoverage['unshortener.js'][41]++;
  bitly.expand([url.href], (function (result) {
  _$jscoverage['unshortener.js'][42]++;
  callback(urllib.parse(result.data.expand[0].long_url));
}));
}), isgd: (function (url, callback) {
  _$jscoverage['unshortener.js'][47]++;
  var query = "/forward.php?" + querystring.stringify({format: "json", shorturl: url.pathname.replace("/", "")});
  _$jscoverage['unshortener.js'][51]++;
  Unshorteners.__request(query, "is.gd", http, (function (data) {
  _$jscoverage['unshortener.js'][53]++;
  if (data.url) {
    _$jscoverage['unshortener.js'][54]++;
    callback(urllib.parse(data.url));
  }
  else {
    _$jscoverage['unshortener.js'][56]++;
    Unshorteners.generic(url, callback);
  }
}));
}), googl: (function (url, callback) {
  _$jscoverage['unshortener.js'][62]++;
  var query = "/urlshortener/v1/url?" + querystring.stringify({shortUrl: url.href});
  _$jscoverage['unshortener.js'][64]++;
  Unshorteners.__request(query, "www.googleapis.com", https, (function (data) {
  _$jscoverage['unshortener.js'][66]++;
  callback(urllib.parse(data.longUrl));
}));
}), __request: (function (query, host, module, callback) {
  _$jscoverage['unshortener.js'][72]++;
  var req = module.get({host: host, path: query}, (function (res) {
  _$jscoverage['unshortener.js'][75]++;
  var data = "";
  _$jscoverage['unshortener.js'][76]++;
  res.on("data", (function (chunk) {
  _$jscoverage['unshortener.js'][77]++;
  data += chunk;
}));
  _$jscoverage['unshortener.js'][79]++;
  res.on("end", (function () {
  _$jscoverage['unshortener.js'][80]++;
  data = JSON.parse(data);
  _$jscoverage['unshortener.js'][82]++;
  callback(data);
}));
}));
}), generic: (function (url, callback) {
  _$jscoverage['unshortener.js'][89]++;
  var req;
  _$jscoverage['unshortener.js'][90]++;
  var options = {host: url.host, port: 80, path: url.pathname, headers: {"User-Agent": "AppleWebKit/525.13 (KHTML, like Gecko) Safari/525.13."}, method: "HEAD"};
  _$jscoverage['unshortener.js'][96]++;
  var handle = (function (res) {
  _$jscoverage['unshortener.js'][97]++;
  if (res.statusCode === 301 || res.statusCode === 302) {
    _$jscoverage['unshortener.js'][98]++;
    exports.expand(res.headers.location, callback);
  }
  else {
    _$jscoverage['unshortener.js'][100]++;
    callback(url);
  }
});
  _$jscoverage['unshortener.js'][104]++;
  req = (url.protocol === "http:")? http.request(options, handle): https.request(options, handle);
  _$jscoverage['unshortener.js'][106]++;
  req.end();
})};
_$jscoverage['unshortener.js'][112]++;
exports.Unshorteners = Unshorteners;
_$jscoverage['unshortener.js'].source = ["","var urllib = require('url');","var http = require('http'), https = require('https');","var Bitly = require('bitly').Bitly;","var querystring = require('querystring');","","exports.expand = function (url, options, callback) {","    callback = arguments[arguments.length-1];","    if (typeof(callback) != 'function') {","        callback = function () {};","    }","    options = (typeof(arguments[1]) !== 'function') ? arguments[1] : {};","","    url = (typeof(url) === 'object') ? url : urllib.parse(url);","","    switch (url.host) {","    case 'bit.ly':","    case 'j.mp':","        if (options.bitly) {","\t    Unshorteners.bitly(url, options.bitly, callback);","        }else{","            Unshorteners.generic(url, callback);","        }","\tbreak;","    case 'is.gd':","        Unshorteners.isgd(url, callback);","        break;","    case 'goo.gl':","        Unshorteners.googl(url, callback);","        break;","    default:","\tUnshorteners.generic(url, callback);","    }","};","","var Unshorteners = {","","    bitly: function (url, account, callback) {","\tvar bitly = new Bitly(account.username, account.apikey);","","\tbitly.expand([url.href], function (result) {","\t    callback(urllib.parse(result.data.expand[0].long_url));","\t});","    },","","    isgd: function (url, callback) {","        var query = '/forward.php?'+","                querystring.stringify({format: 'json',","                                       shorturl: url.pathname.replace('/', '')});","","        Unshorteners.__request(query, 'is.gd', http,","                               function (data) {","                                   if (data.url) {","                                       callback(urllib.parse(data.url));","                                   }else{","                                       Unshorteners.generic(url, callback);","                                   }","                               });","    },","","    googl: function (url, callback) {","        var query = '/urlshortener/v1/url?'+querystring.stringify({shortUrl: url.href});","","        Unshorteners.__request(query, 'www.googleapis.com', https,","                               function (data) {","                                   callback(urllib.parse(data.longUrl));","                               });","","    },","","    __request: function (query, host, module, callback) {","        var req = module.get({host: host,","                              path: query},","                             function (res) {","                                 var data = '';","                                 res.on('data', function (chunk) {","                                     data += chunk;","                                 });","                                 res.on('end', function () {","                                     data = JSON.parse(data);","","                                     callback(data);","                                 });","                             });","    },","","    generic: function (url, callback) {","","\tvar req;","\tvar options = {host: url.host,","                       port: 80,","                       path: url.pathname,","\t\t       headers: {'User-Agent': 'AppleWebKit/525.13 (KHTML, like Gecko) Safari/525.13.'},","                       method: 'HEAD'};","","\tvar handle = function (res) {","\t    if (res.statusCode === 301 || res.statusCode === 302) {","\t\texports.expand(res.headers.location, callback);","\t    }else{","\t\tcallback(url);","\t    }","\t};","","\treq = (url.protocol === 'http:') ? http.request(options, handle)","            : https.request(options, handle);","\treq.end();","","    }","","};","","exports.Unshorteners = Unshorteners;"];
